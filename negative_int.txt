Short Integer (2 bytes, 16 bits):
   -30528 : 1000100011000000
Integer (4 bytes, 32 bits):
   -1800000 : 11111111111001001000100011000000
Long Integer (8 bytes, 64 bits):
   -1800000 : 1111111111111111111111111111111111111111111001001000100011000000

Because the input constant is negative; instead of leading zeros to represent
the number, there are leading 1's. To find the actual number the binary code
represents, you must subtract one and then take the opposite values for 0 and
1. This will give you the negative value represented on the left of the
output. Inserting a negative integer larger than the amount of bits used to
store it, the values requiring greater bits are lost. Again, just as the case was
with positive integers.

